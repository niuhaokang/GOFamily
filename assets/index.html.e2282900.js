import{d as n}from"./app.1caf3c2c.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1>\u6CDB\u578B</h1><p><strong>\u5BFC\u8BFB\uFF1A</strong></p><ul><li>\u7EA6\u675F</li><li>\u4F7F\u7528\u65B9\u6CD5</li><li>\u5B9E\u73B0\u539F\u7406</li><li>\u8DDF\u5176\u5B83\u8BED\u8A00\u7684\u6CDB\u578B\u8FDB\u884C\u5BF9\u6BD4</li><li>\u7528\u4F8B\u5B50\u5B66\u6CDB\u578B</li><li>issues</li></ul><blockquote><p>\u6CDB\u578B\u9700\u6EE1\u8DB3 <code>go1.18+</code></p></blockquote><h2>\u7EA6\u675F</h2><p>go\u4F7F\u7528interface\u4F5C\u4E3A\u7EA6\u675F\uFF0C\u7EA6\u675F\u7684\u610F\u601D\u662F\u7EA6\u675F\u4E86\u8FD9\u4E2A\u6CDB\u578B\u90FD\u5177\u6709\u54EA\u4E9B\u5B9E\u9645\u7C7B\u578B\u3002\u6240\u4EE5\u53EF\u4EE5\u7406\u89E3\u4E3A\uFF0Cgo\u5C06interface\u7684\u804C\u8D23\u7ED9\u6269\u5C55\u4E86\uFF0C\u8BA9\u63A5\u53E3\u4E0D\u4EC5\u4EC5\u4F5C\u4E3A\u63A5\u53E3 --- \u89E3\u8026\u7684\uFF0C\u62BD\u8C61\u5316\u7684\u7ED3\u6784\u4F53\uFF0C\u8FD8\u5177\u6709\u4E86\u7EA6\u675F\uFF0C\u5BF9\u4E8E\u7C7B\u578B\u7684\u7EA6\u675F\u4F5C\u7528\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> st <span class="token keyword">interface</span><span class="token punctuation">{</span>
  <span class="token builtin">int</span> <span class="token operator">|</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u91CC st\u7EA6\u675F\u62E5\u6709int\u548Cstring\uFF0C\u8BF7\u6CE8\u610F\u8FD9\u91CC\u7684st\u662F\u7EA6\u675F\uFF0C\u4E0D\u662F\u6CDB\u578B\u7C7B\u578B</p><p>go\u5185\u7F6E\u4E86\u5F88\u591A\u7EA6\u675F\uFF0C\u6BD4\u5982\u8BF4 any \u548C comparable \uFF0C\u610F\u601D\u662F\u4EFB\u4F55\u7C7B\u578B\u548C\u53EF\u4EE5\u6BD4\u8F83\u7684\u7C7B\u578B\u3002\u4EE5\u540E\u5E94\u8BE5\u4F1A\u6709\u4E00\u4E2A\u65B0\u7684\u5185\u7F6E\u7EA6\u675F\u7684\u5305\u53EB\u505A<code>package constraints</code> \u4F8B\u5982any comparable \uFF0COrdered \u7B49\u7B49\u7EA6\u675F\u90FD\u4F1A\u5185\u7F6E\u5230\u6807\u51C6\u5E93\u4E2D</p><p>\u7EA6\u675F\u4E0D\u4EC5\u4EC5\u53EF\u4EE5\u5355\u72EC\u5199\u51FA\u6765\uFF0C\u8FD8\u53EF\u4EE5\u5185\u7F6E\u4E8E\u51FD\u6570\u5185\u90E8\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> Age<span class="token punctuation">[</span>T <span class="token builtin">int</span><span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span>B <span class="token builtin">float64</span><span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">(</span>i T<span class="token punctuation">,</span>j B<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8FD9\u79CD\u5F62\u5F0F\u4E0B\uFF0CT \u548C B \u7684\u7EA6\u675F\u5C31\u662F\u4EC5\u9650\u6B64\u51FD\u6570\u4F7F\u7528</p><p>\u4E0B\u9762\u6211\u4EEC\u770B\u4E00\u79CD\u5F62\u5F0F\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B\u7EA6\u675F\u7684\u4E0D\u4EC5\u4EC5\u662Fstring\u548Cint\uFF0C\u800C\u662F\u5305\u542B\u4E86\u5E95\u5C42\u662F\u4ED6\u4EEC\u7684\u6240\u6709\u6570\u636E\uFF0C\u6BD4\u5982\u8BF4 <code>type DD int</code> \u4E5F\u7B26\u5408\u8FD9\u4E2A\u7EA6\u675F\uFF0C\u8BF7\u8BB0\u4F4F\u53EA\u80FD\u4F7F\u7528\u5728\u5E95\u5C42\u7C7B\u578B\u4E0A\uFF0C\u5982\u679C\u4F7F\u7528<code>~DD</code>\u662F\u4E0D\u88AB\u5141\u8BB8\u7684</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> st <span class="token keyword">interface</span><span class="token punctuation">{</span>
	~<span class="token builtin">string</span> <span class="token operator">|</span> ~<span class="token builtin">int</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4E8E\u6B64\u540C\u65F6\uFF0C\u7EA6\u675F\u4E5F\u4E0D\u4EC5\u4EC5\u662F\u57FA\u7840\u7C7B\u578B\uFF0C\u7EA6\u675F\u7684\u5185\u5BB9\u662F\u65B9\u6CD5\u4E5F\u662F\u53EF\u4EE5\u7684</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>
<span class="token keyword">func</span> ConcatTo<span class="token punctuation">[</span>S Stringer<span class="token punctuation">,</span> P Plusser<span class="token punctuation">]</span><span class="token punctuation">(</span>s <span class="token punctuation">[</span><span class="token punctuation">]</span>S<span class="token punctuation">,</span> p <span class="token punctuation">[</span><span class="token punctuation">]</span>P<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> s <span class="token punctuation">{</span>
		r<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">Plus</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> r
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Plusser <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">Plus</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> Stringer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u6240\u6709\u8BF4\u8FD9\u91CC\u5C31\u53EF\u4EE5\u770B\u51FA\u6765\uFF0C\u5728\u5F15\u5165\u6CDB\u578B\u4E4B\u540E\uFF0Cgo\u7684interface\u7684\u529F\u80FD\u6269\u5145\u4E86\u3002</p><p>\u7EA6\u675F\u8DDF\u63A5\u53E3\u662F\u4E00\u6837\u7684\u4E5F\u662F\u53EF\u4EE5\u5D4C\u5957\u7684</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> ComparableHasher <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	comparable
	<span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">uintptr</span>
<span class="token punctuation">}</span>

<span class="token comment">// or</span>

<span class="token keyword">type</span> ImpossibleConstraint <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	comparable
	<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8FD9\u91CC\u7684\u610F\u4E49\u5C31\u662F <strong>and</strong>\u7684\u610F\u601D \u5C31\u662F\u8BF4\u8FD9\u4E2A\u7EA6\u675F\u662F\u53EF\u4EE5\u6BD4\u8F83\u7684\u8FD8\u662F\u5FC5\u987B\u5F97\u652F\u6301<code>hash()uintptr</code></p><p>\u4E0B\u9762\u8FD9\u79CD\u65B9\u6CD5\u4E5F\u662F\u53EF\u4EE5\u7684</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> NumericAbs<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	~<span class="token builtin">int</span> <span class="token operator">|</span> ~<span class="token builtin">int8</span> <span class="token operator">|</span> ~<span class="token builtin">int16</span> <span class="token operator">|</span> ~<span class="token builtin">int32</span> <span class="token operator">|</span> ~<span class="token builtin">int64</span> <span class="token operator">|</span>
		~<span class="token builtin">uint</span> <span class="token operator">|</span> ~<span class="token builtin">uint8</span> <span class="token operator">|</span> ~<span class="token builtin">uint16</span> <span class="token operator">|</span> ~<span class="token builtin">uint32</span> <span class="token operator">|</span> ~<span class="token builtin">uint64</span> <span class="token operator">|</span> ~<span class="token builtin">uintptr</span> <span class="token operator">|</span>
		~<span class="token builtin">float32</span> <span class="token operator">|</span> ~<span class="token builtin">float64</span> <span class="token operator">|</span>
		~<span class="token builtin">complex64</span> <span class="token operator">|</span> ~<span class="token builtin">complex128</span>
	<span class="token function">Abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> T
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4E0A\u9762\u7684\u7C7B\u578B\u610F\u601D\u662F\u6EE1\u8DB3\u6570\u5B57\u7C7B\u578B\uFF0C\u4E0B\u9762\u7684\u610F\u601D\u662F\u6EE1\u8DB3\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u6240\u4EE5\u6700\u7EC8\u5B9E\u73B0\u8FD9\u4E2A\u7EA6\u675F\uFF0C\u5C31\u662F\u4E00\u4E2A\u5BF9\u8C61\u662F\u6570\u5B57\u7C7B\u578B\uFF0C\u5E76\u4E14\u5B9E\u73B0\u4E86\u8FD9\u4E2A\u63A5\u53E3</p><p>\u5F53\u7ED3\u6784\u4F53\u4E2D\u4F7F\u7528\u6CDB\u578B\u7684\u65F6\u5019\uFF0C\u6CDB\u578B\u4E0D\u80FD\u76F4\u63A5\u4F5C\u4E3A\u5D4C\u5165\u4F7F\u7528</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Lockable<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	T <span class="token comment">// \u6B63\u786E\u7684\u65B9\u6CD5\u5E94\u8BE5\u662F T T</span>
	mu sync<span class="token punctuation">.</span>Mutex
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u9519\u8BEF\u63D0\u793A\uFF1A <code>embedded field type cannot be a (pointer to a) type parameter</code></p><p>\u6211\u4EEC\u518D\u770B\u4E00\u4E0B\u5F53\u6CDB\u578B\u7ED3\u6784\u4F53\u5D4C\u5165\u5230\u5176\u5B83\u7ED3\u6784\u4F53\u4E2D\u5982\u4F55\u4F7F\u7528</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, \u4E16\u754C&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> A<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	T T
<span class="token punctuation">}</span>

<span class="token keyword">type</span> B<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u8FD9\u91CC\u4E5F\u53EF\u4EE5\u4F7F\u7528 A[T] \u524D\u8005\u662F\u8F93\u5165\u4E86\u5B9E\u9645\u7C7B\u578B\uFF0C</span>
	<span class="token comment">//\u540E\u8005\u867D\u7136\u8F93\u5165\u7684\u662F\u6CDB\u578B\u7C7B\u578BT\uFF0C\u4F46\u662F\u540C\u6837\u5C5E\u4E8E\u4E00\u4E2A\u5177\u4F53\u7C7B\u578B</span>
	A<span class="token punctuation">[</span>C<span class="token punctuation">]</span> 
	T T
<span class="token punctuation">}</span>

<span class="token keyword">type</span> C <span class="token keyword">struct</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u53EF\u4EE5\u770B\u51FA\u5173\u952E\u70B9\uFF0C\u6CDB\u578B\u7ED3\u6784\u4F53\u88AB\u5D4C\u5165\u5176\u5B83\u7ED3\u6784\u4F53\u7684\u65F6\u5019\uFF0C\u6CDB\u578B\u8981\u7ED9\u5B9E\u9645\u7684\u7C7B\u578B\u624D\u53EF\u4EE5</p><p>\u8FD9\u53E5\u89E3\u91CA\u662F\u8DDF\u65B9\u6CD5\u4E2D\u7684\u6CDB\u578B\u505A\u5BF9\u6BD4\u7684</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> A<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">func</span><span class="token punctuation">(</span>a A<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6211\u4EEC\u77E5\u9053\u65B9\u6CD5\u91CC\u7684\u6CDB\u578B\u662F\u4F7F\u7528\u8FD9\u79CD\u65B9\u6CD5\uFF0C\u65B9\u6CD5\u91CC\u7684\u6CDB\u578B\u662F\u53EF\u4EE5\u76F4\u63A5\u4ECEstruct\u5B9A\u4E49\u7684\u5730\u65B9\u7EE7\u627F\u8FD9\u4E2A\u6CDB\u578BT\u7684\uFF0C\u4F46\u662F\u7ED3\u6784\u4F53\u7684\u5D4C\u5957\u6216\u8005\u4F7F\u7528\uFF0C\u5C31\u4E0D\u80FD\u7EE7\u627F\u4E86\uFF0C\u6240\u4EE5\u5F97\u7ED9\u5B9E\u9645\u7684\u7C7B\u578B\u4E0D\u7136\u5C31\u4F1A\u62A5\u9519 <code>embedded field type cannot be a (pointer to a) type parameter</code></p><p>\u7EA6\u675F\u91CC\u7684\u6CDB\u578B\u540C\u6837\u4E0D\u80FD\u76F4\u63A5\u5D4C\u5165\u4F7F\u7528</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> B<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	T
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u9519\u8BEF\u63D0\u793A\uFF1A <code>cannot embed a type parameter</code></p><p>\u53EA\u6709\u6CDB\u578B\u7C7B\u578B\u662F\u65B9\u6CD5\u7684\u53C2\u6570\u65F6\u624D\u53EF\u4EE5\u8FD9\u4E48\u505A\uFF0C\u6BD4\u5982\u8BF4</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> EmbeddedParameter<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	~<span class="token builtin">int</span> <span class="token operator">|</span> ~<span class="token builtin">uint</span> 
	<span class="token function">me</span><span class="token punctuation">(</span><span class="token punctuation">)</span> T 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5982\u679C\u60F3\u4F7F\u7528\u8FD9\u79CD\u7EA6\u675F\uFF0C\u53EF\u4EE5\u8FD9\u4E48\u4F7F\u7528</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> Abs<span class="token punctuation">[</span>T EmbeddedParameter<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span>t T<span class="token punctuation">)</span>T<span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u89E3\u91CA\u4E00\u4E0B\uFF0C\u4E2D\u62EC\u53F7\u91CC\u9762\u6CDB\u578B\u7684\u4E24\u4E2AT\u8868\u8FBE\u7684\u610F\u601D\u662F\u4E0D\u4E00\u6837\u7684\uFF0C\u540E\u9762\u7684T\u8868\u8FBE\u7684\u662F \u7EA6\u675F\u91CC\u7684\u6CDB\u578B\uFF0C\u8868\u793A any\uFF0C\u524D\u9762\u7684T\u8868\u793A\u7684\u662F\u6EE1\u8DB3\u540E\u9762\u7684\u8FD9\u4E2A\u7EA6\u675F\u7684\u7C7B\u578BT\uFF0C\u4F46\u662F\u8FD9\u91CC\u6CE8\u610F\uFF0C\u540E\u9762T\u867D\u7136\u4E4B\u524D\u5B9A\u4E49\u7684\u65F6\u5019\u662Fany\u4F46\u662F\u8FD9\u91CC\u88AB\u6539\u53D8\u4E86\uFF0C\u6539\u53D8\u4E3A\u4E86\u5FC5\u987B\u6EE1\u8DB3\u7EA6\u675F <code>EmbeddedParameter</code>\u7684\u7C7B\u578B\uFF0C\u5982\u679C\u8BF4\u7684\u901A\u4FD7\u70B9\uFF0C\u4ECEany\u53D8\u6210\u4E86\uFF0C\u6EE1\u8DB3 <code>int \uFF5C uint and \u5B9E\u73B0 me()T\u65B9\u6CD5 </code>\u540E\u6587\u4F1A\u6709\u4EE3\u7801\u8FDB\u884C\u89E3\u91CA\u3002</p><p>\u5F53\u7136\u4E86\uFF0C\u540E\u9762\u7684T\u6CA1\u6709\u4E5F\u884C\uFF0C\u5982\u679C\u6CA1\u6709\u540E\u9762\u7684T\u5C31\u662F\u76F8\u5F53\u4E8E\u4E0D\u6539\u53D8\u540E\u9762\u7684T\u7684\u7EA6\u675F\u7C7B\u578B\u4E86</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Differ<span class="token punctuation">[</span>T1 any<span class="token punctuation">]</span> <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">Diff</span><span class="token punctuation">(</span>T1<span class="token punctuation">)</span> <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> IsClose<span class="token punctuation">[</span>T2 Differ<span class="token punctuation">]</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b T2<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">Diff</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5F53\u4F7F\u7528\u4E86\u6CDB\u578B\u4E4B\u540E\uFF0C\u662F\u65E0\u6CD5\u4F7F\u7528\u65AD\u8A00\u7684\uFF0C\u8FD9\u662F\u975E\u6CD5\u7684\uFF0C\u90A3\u4E48\u5982\u679C\u4E00\u5B9A\u8981\u5728\u8FD0\u884C\u65F6\u7684\u65F6\u5019\u53BB\u5224\u65AD\u7C7B\u578B\u600E\u4E48\u529E\u5462\uFF1F\u7B54\u6848\u5C31\u662F\u8F6C\u53D8\u6210<code>interface{}</code>\u5373\u53EF\uFF0C\u56E0\u4E3A\u6211\u4EEC\u77E5\u9053\u4EFB\u4F55\u5BF9\u8C61\u90FD\u5DF2\u7ECF\u5B9E\u73B0\u4E86\u7A7A\u63A5\u53E3\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u88AB\u7A7A\u63A5\u53E3\u53BB\u8F6C\u5316</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> GeneralAbsDifference<span class="token punctuation">[</span>T Numeric<span class="token punctuation">]</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b T<span class="token punctuation">)</span> T <span class="token punctuation">{</span>
	<span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int8</span><span class="token punctuation">,</span> <span class="token builtin">int16</span><span class="token punctuation">,</span> <span class="token builtin">int32</span><span class="token punctuation">,</span> <span class="token builtin">int64</span><span class="token punctuation">,</span>
		<span class="token builtin">uint</span><span class="token punctuation">,</span> <span class="token builtin">uint8</span><span class="token punctuation">,</span> <span class="token builtin">uint16</span><span class="token punctuation">,</span> <span class="token builtin">uint32</span><span class="token punctuation">,</span> <span class="token builtin">uint64</span><span class="token punctuation">,</span> <span class="token builtin">uintptr</span><span class="token punctuation">,</span>
		<span class="token builtin">float32</span><span class="token punctuation">,</span> <span class="token builtin">float64</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token function">OrderedAbsDifference</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> 
	<span class="token keyword">case</span> <span class="token builtin">complex64</span><span class="token punctuation">,</span> <span class="token builtin">complex128</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token function">ComplexAbsDifference</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> 
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0B\u9762\u770B\u4E00\u4E0B\u522B\u540D\u7684\u771F\u5B9E\u7C7B\u578B\u662F\u6CDB\u578B\u7684\u60C5\u51B5</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> A<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>T

<span class="token keyword">type</span> AliasA <span class="token operator">=</span> A <span class="token comment">// \u9519\u8BEF \u274C</span>

<span class="token keyword">type</span> AliasA <span class="token operator">=</span> A<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token comment">// \u6B63\u786E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5176\u4E2D\u9519\u8BEF\u7684\u95EE\u9898\u662F \u522B\u540D\u4E0D\u80FD\u76F4\u63A5\u4F7F\u7528\u6CDB\u578B\u7C7B\u578B <code>cannot use generic type A[T any] without instantiation</code>\uFF0C\u5B83\u9700\u8981\u6CDB\u578B\u7684\u5B9E\u4F8B\u5316</p><h2>\u4F7F\u7528\u65B9\u6CD5</h2><p>\u4E0B\u9762\u5C55\u793A\u4E00\u4E0Bgo\u6CDB\u578B\u7684\u57FA\u672C\u4F7F\u7528\u65B9\u6CD5</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v&quot;</span><span class="token punctuation">,</span>Age<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> Age<span class="token punctuation">[</span>T any<span class="token punctuation">]</span><span class="token punctuation">(</span>t T<span class="token punctuation">)</span> T<span class="token punctuation">{</span>
	<span class="token keyword">return</span> t
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8FD9\u662F\u51FD\u6570\u4F7F\u7528\u6CDB\u578B\u7684\u5199\u6CD5\uFF0C\u5F53\u51FD\u6570\u4F7F\u7528\u6CDB\u578B\u7684\u65F6\u5019\uFF0C\u9700\u8981\u5728\u53D8\u91CF\u524D\u4F7F\u7528\u4E2D\u62EC\u53F7\u6807\u6CE8\u6CDB\u578B\u7684\u5177\u4F53\u7EA6\u675F\uFF0C\u7136\u540E\u540E\u9762\u624D\u80FD\u4F7F\u7528\u8FD9\u4E2A\u6CDB\u578B\u7C7B\u578B\uFF0C\u4F7F\u7528\u6CDB\u578B\u51FD\u6570\u7684\u65F6\u5019\uFF0C\u4E2D\u62EC\u53F7\u662F\u53EF\u4EE5\u7701\u7565\u7684<code>Age(12)</code> \u7CFB\u7EDF\u4F1A\u81EA\u52A8\u63A8\u7B97\u6CDB\u578B\u7684\u5177\u4F53\u5B9E\u73B0\u3002\u987A\u4FBF\u8BF4\u4E00\u4E0B\uFF0C\u6CDB\u578B\u7C7B\u578B\u4F7F\u7528<code>%v</code>\u4F5C\u4E3A\u5360\u4F4D\u7B26\uFF0C\u6CDB\u578B\u7C7B\u578B\u65E0\u6CD5\u8FDB\u884C\u65AD\u8A00\uFF0C\u8FD9\u4E00\u70B9\u8DDF<code>interface{}</code>\u4E0D\u540C\u3002</p><p>\u5F53\u7136\u4E86\uFF0C\u6211\u4E48\u4E5F\u53EF\u4EE5\u4E0D\u7528any\uFF0C\u81EA\u5B9A\u4E49\u4E00\u4E2A\u7EA6\u675F</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	Age<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> st <span class="token keyword">interface</span><span class="token punctuation">{</span>
  <span class="token builtin">int</span> <span class="token operator">|</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> Age<span class="token punctuation">[</span>T st<span class="token punctuation">]</span><span class="token punctuation">(</span>t T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u770B\u5B8C\u4E86\u5728\u51FD\u6570\u5185\u7684\u6CDB\u578B\uFF0C\u6211\u4EEC\u5728\u770B\u4E00\u4E0B\u5728\u65B9\u6CD5\u4E2D\u5982\u4F55\u4F7F\u7528\u6CDB\u578B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">new</span><span class="token punctuation">(</span>Age<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>

	<span class="token keyword">var</span> dd DD<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span>
	dd<span class="token punctuation">.</span><span class="token function">TT</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Age<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	I T
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token operator">*</span>Age<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">Post</span><span class="token punctuation">(</span>t T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>I<span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> DD<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>T

<span class="token keyword">func</span><span class="token punctuation">(</span>dd <span class="token operator">*</span>DD<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">TT</span><span class="token punctuation">(</span>t T<span class="token punctuation">)</span><span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token operator">*</span>dd<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u5728 age \u7ED3\u6784\u4F53\u58F0\u660E\u7684\u65F6\u5019\uFF0C\u58F0\u660E\u4E86\u4E00\u4E2A\u6CDB\u578B T \uFF0C\u5728struct\u4F53\u5185\u5C31\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E2AT\uFF0C\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF0C\u8FD9\u4E2A\u7ED3\u6784\u4F53\u65B9\u6CD5\u5185\u90E8\u4EC5\u53EF\u4EE5\u4F7F\u7528\u5B9A\u4E49\u5728\u8FD9\u4E2A\u7ED3\u6784\u4F53\u5BF9\u8C61\u4E0A\u7684\u6CDB\u578B</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A<strong>\u9519\u8BEF\u6848\u4F8B</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token operator">*</span>Age<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span>Post<span class="token punctuation">[</span>B any<span class="token punctuation">]</span><span class="token punctuation">(</span>t T<span class="token punctuation">,</span>b B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>I<span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>syntax error: method must have no type parameters</code></p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u770B\u4E00\u4E0B\uFF0C\u5982\u4F55\u4F7F\u7528 <code>type a[T any] interface{} \u6709\u7C7B\u578B\u4E5F\u6709\u65B9\u6CD5</code>\u7684\u6CDB\u578B\u7ED3\u6784</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> d DDD
	<span class="token keyword">var</span> i DDD
	d <span class="token operator">=</span> <span class="token number">1</span>
	i <span class="token operator">=</span> <span class="token number">2</span>
	io <span class="token operator">:=</span> AbsDifference<span class="token punctuation">[</span>DDD<span class="token punctuation">]</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>io<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> DDD <span class="token builtin">int</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>ddd DDD<span class="token punctuation">)</span> <span class="token function">Abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> DDD <span class="token punctuation">{</span>
	<span class="token keyword">return</span> ddd <span class="token operator">+</span> ddd
<span class="token punctuation">}</span>

<span class="token keyword">type</span> NumericAbs<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	~<span class="token builtin">int</span> <span class="token operator">|</span> ~<span class="token builtin">int8</span> <span class="token operator">|</span> ~<span class="token builtin">int16</span> <span class="token operator">|</span> ~<span class="token builtin">int32</span> <span class="token operator">|</span> ~<span class="token builtin">int64</span> <span class="token operator">|</span>
		~<span class="token builtin">uint</span> <span class="token operator">|</span> ~<span class="token builtin">uint8</span> <span class="token operator">|</span> ~<span class="token builtin">uint16</span> <span class="token operator">|</span> ~<span class="token builtin">uint32</span> <span class="token operator">|</span> ~<span class="token builtin">uint64</span> <span class="token operator">|</span> ~<span class="token builtin">uintptr</span> <span class="token operator">|</span>
		~<span class="token builtin">float32</span> <span class="token operator">|</span> ~<span class="token builtin">float64</span> <span class="token operator">|</span>
		~<span class="token builtin">complex64</span> <span class="token operator">|</span> ~<span class="token builtin">complex128</span>
	<span class="token function">Abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> T
<span class="token punctuation">}</span>

<span class="token comment">// AbsDifference computes the absolute value of the difference of</span>
<span class="token comment">// a and b, where the absolute value is determined by the Abs method.</span>
<span class="token keyword">func</span> AbsDifference<span class="token punctuation">[</span>T NumericAbs<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b T<span class="token punctuation">)</span> T <span class="token punctuation">{</span>
	d <span class="token operator">:=</span> a <span class="token operator">-</span> b
	<span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">Abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2>\u5B9E\u73B0\u539F\u7406</h2><p>\u6CDB\u578B\u7684\u7B2C\u4E00\u79CD\u65B9\u6CD5\u662F\u5728\u7F16\u8BD1\u8FD9\u4E2A\u6CDB\u578B\u65F6\uFF0C\u4F7F\u7528\u4E00\u4E2A\u5B57\u5178\uFF0C\u91CC\u9762\u5305\u542B\u4E86\u8FD9\u4E2A\u6CDB\u578B\u51FD\u6570\u7684\u5168\u90E8\u7C7B\u578B\u4FE1\u606F\uFF0C\u7136\u540E\u5F53\u8FD0\u884C\u65F6\uFF0C\u4F7F\u7528\u51FD\u6570\u5B9E\u4F8B\u5316\u7684\u65F6\u5019\u4ECE\u8FD9\u4E2A\u5B57\u5178\u4E2D\u53D6\u51FA\u4FE1\u606F\u8FDB\u884C\u5B9E\u4F8B\u5316\u5373\u53EF\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u4F1A\u5BFC\u81F4\u6267\u884C\u6027\u80FD\u4E0B\u964D\uFF0C\u4E00\u4E2A\u5B9E\u4F8B\u5316\u7C7B\u578B<code>int, x=y</code>\u53EF\u80FD\u901A\u8FC7\u5BC4\u5B58\u5668\u590D\u5236\u5C31\u53EF\u4EE5\u4E86\uFF0C\u4F46\u662F\u6CDB\u578B\u5FC5\u987B\u901A\u8FC7\u5185\u5B58\u4E86\uFF08\u56E0\u4E3A\u9700\u8981map\u8FDB\u884C\u8D4B\u503C\uFF09\uFF0C\u4E0D\u8FC7\u597D\u5904\u5C31\u662F\u4E0D\u6D6A\u8D39\u7A7A\u95F4</p><p>\u8FD8\u6709\u4E00\u79CD\u65B9\u6CD5\u5C31\u662F\u628A\u8FD9\u4E2A\u6CDB\u578B\u7684\u6240\u6709\u7C7B\u578B\u5168\u90E8\u63D0\u524D\u751F\u6210\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u4E5F\u6709\u4E00\u4E2A\u5DE8\u5927\u7684\u7F3A\u70B9\u5C31\u662F\u4EE3\u7801\u91CF\u76F4\u7EBF\u4E0A\u5347\uFF0C\u5982\u679C\u662F\u4E00\u4E2A\u5305\u7684\u60C5\u51B5\u4E0B\u8FD8\u80FD\u6839\u636E\u5177\u4F53\u7684\u51FD\u6570\u8C03\u7528\u53BB\u5B9E\u73B0\u8BE5\u5B9E\u73B0\u7684\u7C7B\u578B\uFF0C\u5982\u679C\u662F\u5305\u8F93\u51FA\u7684\u7684\u60C5\u51B5\u4E0B\uFF0C\u90A3\u4E48\u5C31\u5F97\u4E0D\u5F97\u4E0D\u751F\u6210\u6240\u6709\u7684\u7C7B\u578B\u3002</p><p>\u6240\u4EE5\u5C06\u4E24\u8005\u7ED3\u5408\u5728\u4E00\u8D77\u6216\u8BB8\u662F\u6700\u597D\u7684\u9009\u62E9\u3002</p><p>\u8FD9\u79CD\u65B9\u6CD5\u662F\u8FD9\u6837\u7684\uFF0C\u5982\u679C\u7C7B\u578B\u7684\u5185\u5B58\u5206\u914D\u5668/\u5783\u573E\u56DE\u6536\u5668\u5448\u73B0\u7684\u65B9\u5F0F\u4E00\u81F4\u7684\u60C5\u51B5\u4E0B\uFF0C\u53EA\u7ED9\u5B83\u751F\u6210\u4E00\u4EFD\u4EE3\u7801\uFF0C\u7136\u540E\u7ED9\u5B83\u4E00\u4E2A\u5B57\u5178\u6765\u533A\u5206\u4E0D\u540C\u7684\u5177\u4F53\u884C\u4E3A\uFF0C\u53EF\u4EE5\u6700\u5927\u9650\u5EA6\u7684\u5E73\u8861\u901F\u5EA6\u548C\u4F53\u79EF</p><h2>\u8DDF\u5176\u5B83\u8BED\u8A00\u7684\u6CDB\u578B\u8FDB\u884C\u5BF9\u6BD4</h2><ul><li>c\u8BED\u8A00\uFF1A\u672C\u8EAB\u4E0D\u5177\u6709\u6CDB\u578B\uFF0C\u9700\u8981\u7A0B\u5E8F\u5458\u53BB\u5B9E\u73B0\u4E00\u4E2A\u6CDB\u578B\uFF0C\u5B9E\u73B0\u590D\u6742\uFF0C\u4F46\u662F\u4E0D\u589E\u52A0\u8BED\u8A00\u7684\u590D\u6742\u5EA6\uFF08\u6362\u8A00\u4E4B\u53EA\u589E\u52A0\u4E86\u7A0B\u5E8F\u5458\u7684\uFF09</li><li>c++\u548Crust\uFF1A\u8DDFgo\u57FA\u672C\u4FDD\u6301\u4E00\u79CD\u65B9\u5F0F\uFF0C\u5C31\u662F\u589E\u52A0\u7F16\u8BD1\u5668\u7684\u5DE5\u4F5C\u91CF</li><li>Java\uFF1A\u5C06\u6CDB\u578B\u88C5\u7BB1\u4E3Aobject\uFF0C\u5728\u88C5\u7BB1\u548C\u62C6\u7BB1\u64E6\u9664\u7C7B\u578B\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u7A0B\u5E8F\u6267\u884C\u6548\u7387\u4F1A\u53D8\u4F4E</li></ul><h2>\u7528\u4F8B\u5B50\u5B66\u6CDB\u578B</h2><p>\u7406\u8BBA\u5B66\u4E60\u5B8C\u4E86\uFF0C\u4E0D\u4F7F\u7528\u4F8B\u5B50\u8FDB\u884C\u590D\u4E60\u7684\u8BDD\u4F1A\u5FD8\u7684\u5F88\u5FEB\u7684\u3002\u8DDF\u7740\u6211\u770B\u51E0\u4E2A\u4F8B\u5B50\u5427</p><p><em><strong>\u4F8B\u5B50\u4E00\uFF1A</strong></em> \u51FD\u6570\u6CDB\u578B <code>map-filter-reduce</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	vM <span class="token operator">:=</span> Map<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>

		<span class="token keyword">return</span> i <span class="token operator">+</span> i
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;map\u7684\u7ED3\u679C\u662F\uFF1A%v&quot;</span><span class="token punctuation">,</span> vM<span class="token punctuation">)</span>
	vF <span class="token operator">:=</span> Filter<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>t <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> t <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">true</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;filter\u7684\u7ED3\u679C\u662F:%v&quot;</span><span class="token punctuation">,</span> vF<span class="token punctuation">)</span>
	vR <span class="token operator">:=</span> Reduce<span class="token punctuation">[</span>Value<span class="token punctuation">,</span> <span class="token operator">*</span>Result<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>Value<span class="token punctuation">{</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;tt&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;bb&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;7i&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;8i&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;u4i&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;uei&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;uwi&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;uti&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Result<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>r <span class="token operator">*</span>Result<span class="token punctuation">,</span> v Value<span class="token punctuation">)</span> <span class="token operator">*</span>Result <span class="token punctuation">{</span>
		r<span class="token punctuation">.</span>value <span class="token operator">=</span> r<span class="token punctuation">.</span>value <span class="token operator">+</span> v<span class="token punctuation">.</span>year
		<span class="token keyword">return</span> r
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;reduce\u7684\u7ED3\u679C\u662F\uFF1A&quot;</span><span class="token punctuation">,</span> vR<span class="token punctuation">.</span>value<span class="token punctuation">)</span>

<span class="token punctuation">}</span>

<span class="token comment">// Map:\u7C7B\u4F3C\u4E8E\u6D17\u83DC\uFF0C\u8FDB\u53BB\u7684\u83DC\u548C\u51FA\u6765\u7684\u83DC\u4E0D\u4E00\u6837\u4E86\u6240\u4EE5\u9700\u8981\u4E24\u79CD\u79CD\u7C7B</span>
<span class="token keyword">func</span> Map<span class="token punctuation">[</span>T1<span class="token punctuation">,</span> T2 any<span class="token punctuation">]</span><span class="token punctuation">(</span>arr <span class="token punctuation">[</span><span class="token punctuation">]</span>T1<span class="token punctuation">,</span> f <span class="token keyword">func</span><span class="token punctuation">(</span>T1<span class="token punctuation">)</span> T2<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>T2 <span class="token punctuation">{</span>
	result <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>T2<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> arr <span class="token punctuation">{</span>
		result<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">// Filter:\u7C7B\u4F3C\u4E8E\u6458\u83DC\uFF0C\u8FDB\u53BB\u7684\u83DC\u548C\u51FA\u6765\u7684\u83DC\u662F\u4E00\u79CD\uFF0C\u4E0D\u8FC7\u91CF\u51CF\u5C11\u4E86</span>
<span class="token keyword">func</span> Filter<span class="token punctuation">[</span>T any<span class="token punctuation">]</span><span class="token punctuation">(</span>arr <span class="token punctuation">[</span><span class="token punctuation">]</span>T<span class="token punctuation">,</span> f <span class="token keyword">func</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span> <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>T <span class="token punctuation">{</span>
	<span class="token keyword">var</span> result <span class="token punctuation">[</span><span class="token punctuation">]</span>T
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> arr <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token function">f</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token comment">// Reduce:\u7C7B\u4F3C\u4E8E\u505A\u83DC\uFF0C\u5C06\u83DC\u505A\u6210\u4E00\u9053\u6599\u7406\uFF0C\u6240\u4EE5\u9700\u8981\u4E24\u79CD\u7C7B\u578B</span>
<span class="token keyword">func</span> Reduce<span class="token punctuation">[</span>T1<span class="token punctuation">,</span> T2 any<span class="token punctuation">]</span><span class="token punctuation">(</span>arr <span class="token punctuation">[</span><span class="token punctuation">]</span>T1<span class="token punctuation">,</span> zero T2<span class="token punctuation">,</span> f <span class="token keyword">func</span><span class="token punctuation">(</span>T2<span class="token punctuation">,</span> T1<span class="token punctuation">)</span> T2<span class="token punctuation">)</span> T2 <span class="token punctuation">{</span>
	result <span class="token operator">:=</span> zero
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> arr <span class="token punctuation">{</span>
		result <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Value <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	name <span class="token builtin">string</span>
	year <span class="token builtin">int</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> Result <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	value <span class="token builtin">int</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br></div></div><p><code>map\u7684\u7ED3\u679C\u662F\uFF1A[2 4 6 8 10] filter\u7684\u7ED3\u679C\u662F:[3 4 5] reduce\u7684\u7ED3\u679C\u662F\uFF1A 36</code></p><p><em><strong>\u4F8B\u5B50\u4E8C\uFF1A</strong></em> \u65B9\u6CD5\u4E0A\u7684\u6CDB\u578B <code>sets</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token comment">// \u8FD9\u91CC Sets\u7684\u5177\u4F53\u7C7B\u578B\u548CMake\u7684\u5177\u4F53\u7C7B\u578B\u90FD\u662Fint,\u6240\u4EE5\u53EF\u4EE5\u6B63\u5E38\u8D4B\u503C</span>
	<span class="token keyword">var</span> s Sets<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> Make<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">//</span>
	s<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
	s<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	s<span class="token punctuation">.</span><span class="token function">Iterate</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	s<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Sets \u4E00\u4E2Akey  \u5B58\u50A8\u5BF9\u8C61</span>
<span class="token keyword">type</span> Sets<span class="token punctuation">[</span>T comparable<span class="token punctuation">]</span> <span class="token keyword">map</span><span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// Make \u5B9E\u4F8B\u5316\u4E00\u4E2Amap</span>
<span class="token keyword">func</span> Make<span class="token punctuation">[</span>D comparable<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> Sets<span class="token punctuation">[</span>D<span class="token punctuation">]</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u6CDB\u578B\u5C31\u50CF\u4E00\u4E2A\u7BA1\u9053\u4E00\u6837\uFF0C\u53EA\u8981\u5B9E\u4F8B\u5316\u7684\u65F6\u5019\u7BA1\u5B50\u91CC\u7684\u4E1C\u897F\u4E00\u81F4\uFF0C\u90A3\u4E48\u5C31\u662F\u4E00\u6839\u7BA1\u5B50</span>
	<span class="token keyword">return</span> <span class="token function">make</span><span class="token punctuation">(</span>Sets<span class="token punctuation">[</span>D<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Add \u5411\u8FD9\u4E2Asets\u6DFB\u52A0\u5185\u5BB9</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>s Sets<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">Add</span><span class="token punctuation">(</span>t T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// delete ,\u4ECE\u8FD9\u4E2Asets\u4E2D\u5220\u9664\u5185\u5BB9</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>s Sets<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">Delete</span><span class="token punctuation">(</span>t T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">delete</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//  Contains \u64AD\u62A5t\u662F\u5426\u5C5E\u4E8E\u8FD9\u4E2Asets</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>s Sets<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">Contains</span><span class="token punctuation">(</span>t T<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
	<span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> s<span class="token punctuation">[</span>t<span class="token punctuation">]</span>
	<span class="token keyword">return</span> ok
<span class="token punctuation">}</span>

<span class="token comment">//Len sets\u62E5\u6709\u7684\u957F\u5EA6</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>s Sets<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Iterate \u8FED\u4EE3\u5668\uFF0C\u5E76\u4E14\u7ED9\u4E88\u6BCF\u4E2A\u5143\u7D20\u529F\u80FD</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>s Sets<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">Iterate</span><span class="token punctuation">(</span>f <span class="token keyword">func</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> k <span class="token operator">:=</span> <span class="token keyword">range</span> s <span class="token punctuation">{</span>
		<span class="token function">f</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><p><code>map[1:{} 2:{}] false 2 1 2 map[1:{} 2:{}] map[1:{}] </code></p><p><em><strong>\u4F8B\u5B50\u4E09\uFF1A</strong></em> \u5916\u90E8\u5B9A\u4E49\u7684\u7EA6\u675F <code>\u5B9E\u73B0\u4E00\u4E2Asort\u63A5\u53E3\u7C7B\u578B</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, \u4E16\u754C&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// ~ \u4EE3\u8868\u53EA\u8981\u5E95\u5C42\u6EE1\u8DB3\u8FD9\u4E9B\u7C7B\u578B\u4E5F\u53EF\u4EE5\u7B97\u6EE1\u8DB3\u7EA6\u675F</span>
<span class="token keyword">type</span> Ordered <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	~<span class="token builtin">int</span> <span class="token operator">|</span> ~<span class="token builtin">int8</span> <span class="token operator">|</span> ~<span class="token builtin">int16</span> <span class="token operator">|</span> ~<span class="token builtin">int32</span> <span class="token operator">|</span> ~<span class="token builtin">int64</span> <span class="token operator">|</span> ~<span class="token builtin">uintptr</span> <span class="token operator">|</span>
		~<span class="token builtin">uint</span> <span class="token operator">|</span> ~<span class="token builtin">uint8</span> <span class="token operator">|</span> ~<span class="token builtin">uint16</span> <span class="token operator">|</span> ~<span class="token builtin">uint32</span> <span class="token operator">|</span> ~<span class="token builtin">uint64</span> <span class="token operator">|</span>
		~<span class="token builtin">float32</span> <span class="token operator">|</span> ~<span class="token builtin">float64</span> <span class="token operator">|</span> ~<span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> orderedSlice<span class="token punctuation">[</span>T Ordered<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>T

<span class="token keyword">func</span> <span class="token punctuation">(</span>s orderedSlice<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span>           <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>s orderedSlice<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">Less</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>s orderedSlice<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">Swap</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token keyword">func</span> OrderedSlice<span class="token punctuation">[</span>T Ordered<span class="token punctuation">]</span><span class="token punctuation">(</span>s <span class="token punctuation">[</span><span class="token punctuation">]</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	sort<span class="token punctuation">.</span><span class="token function">Sort</span><span class="token punctuation">(</span>orderedSlice<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2>issues</h2><p><em><strong>\u95EE\u9898\u4E00\uFF1A</strong></em> \u5173\u4E8E\u6CDB\u578B\u4E2D\u7684\u96F6\u503C</p><p>\u5728go\u91CC\u9762\u5BF9\u6CDB\u578B\u7684\u96F6\u503C\u5E76\u6CA1\u6709\u4E00\u4E2A\u6240\u8C13\u7684\u6CDB\u578B\u96F6\u503C\u53EF\u4EE5\u4F7F\u7528\uFF0C\u9700\u8981\u6839\u636E\u4E0D\u540C\u7684\u5B9E\u8DF5\u53BB\u5B9E\u73B0\uFF0C\u6BD4\u5982</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Aget<span class="token punctuation">[</span>T any<span class="token punctuation">]</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	t <span class="token operator">*</span>T
<span class="token punctuation">}</span>
<span class="token comment">// \u6839\u636E\u5B9E\u9645\u5224\u65AD\uFF0C\u5982\u679Ca\u7684t\u4E0D\u7B49\u4E8Enil\u518D\u8FD4\u56DE\uFF0C\u5982\u679C\u662Fnil\u5C31\u8FD4\u56DE\u4E00\u4E2AT\u7C7B\u578B\u7684nil\uFF08\u610F\u601D\u5C31\u662F\u53EA\u58F0\u660E\uFF09</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token operator">*</span>Aget<span class="token punctuation">[</span>T<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">Approach</span><span class="token punctuation">(</span><span class="token punctuation">)</span> T <span class="token punctuation">{</span>
	<span class="token keyword">if</span> a<span class="token punctuation">.</span>t <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span> 
		<span class="token keyword">return</span> <span class="token operator">*</span>a<span class="token punctuation">.</span>t
	<span class="token punctuation">}</span>
	<span class="token keyword">var</span> r T
	<span class="token keyword">return</span> r
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u5B9E\u9645\u4E0A\u76EE\u524D\uFF0C\u8FD8\u6CA1\u4E00\u4E2A\u786E\u5207\u7684\u6CDB\u578B\u7684\u96F6\u503C\uFF0C\u90A3\u4E48\u6211\u4EEC\u8981\u505A\u7684\u53EA\u80FD\u662F\u6309\u7167\u5B9E\u9645\u6765\u5177\u4F53\u5206\u6790\uFF0C\u6309\u7167\u63D0\u6848\uFF0C\u4EE5\u540E\u6709\u53EF\u80FD\u4F7F\u7528<code>return ...</code> <code>return _</code> <code>return </code> <code>return nil</code> <code>return T{}</code> \u8FD9\u4E9B\u90FD\u662F\u53EF\u80FD\u7684\u7ED3\u679C\uFF0C\u6211\u4E2A\u4EBA\u6BD4\u8F83\u559C\u6B22 <code>return T{}</code> \u6765\u8868\u793A\u6CDB\u578B\u7684\u96F6\u503C\uFF0C\u6216\u8BB8\u5728go1.19\u6216\u8005go2\u7684\u65F6\u5019\u80FD\u5B9E\u73B0\uFF0C\u62ED\u76EE\u4EE5\u5F85\u5427\u3002</p><p><em><strong>\u95EE\u9898\u4E8C\uFF1A</strong></em> \u65E0\u6CD5\u8BC6\u522B\u4F7F\u7528\u4E86\u5E95\u5C42\u6570\u636E\u7684\u5176\u5B83\u7C7B\u578B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Float <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	~<span class="token builtin">float32</span> <span class="token operator">|</span> ~<span class="token builtin">float64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> NewtonSqrt<span class="token punctuation">[</span>T Float<span class="token punctuation">]</span><span class="token punctuation">(</span>v T<span class="token punctuation">)</span> T <span class="token punctuation">{</span>
	<span class="token keyword">var</span> iterations <span class="token builtin">int</span>
	<span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token builtin">float32</span><span class="token punctuation">:</span>
		iterations <span class="token operator">=</span> <span class="token number">4</span>
	<span class="token keyword">case</span> <span class="token builtin">float64</span><span class="token punctuation">:</span>
		iterations <span class="token operator">=</span> <span class="token number">5</span>
	<span class="token keyword">default</span><span class="token punctuation">:</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;unexpected type %T&quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// Code omitted.</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> MyFloat <span class="token builtin">float32</span>

<span class="token keyword">var</span> G <span class="token operator">=</span> <span class="token function">NewtonSqrt</span><span class="token punctuation">(</span><span class="token function">MyFloat</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u8FD9\u91CC\u7EA6\u675F Float\u62E5\u6709\u7684\u7EA6\u675F\u7C7B\u578B\u662F <code>~float32</code> \u548C <code>float64</code>\u5F53\u5728switch\u4E2D\u5B9A\u4E49\u4E86float32\u548Cflaot64\u65F6\uFF0C\u65E0\u6CD5\u8BC6\u522B\u4E0B\u9762\u7684\u65B0\u7C7B\u578B MyFloat\u5373\u4F7F\u5B83\u7684\u5E95\u5C42\u65F6 float32 \uFF0Cgo\u7684\u63D0\u8BAE\u662F\u4EE5\u540E\u5728switch\u4E2D\u4F7F\u7528 <code>case ~float32:</code> \u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u76EE\u524D\u5C1A\u672A\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898</p><p><em><strong>\u95EE\u9898\u4E09\uFF1A</strong></em> \u5373\u4FBF\u7EA6\u675F\u4E00\u81F4\uFF0C\u7C7B\u578B\u4E5F\u662F\u4E0D\u540C\u7684</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> Copy<span class="token punctuation">[</span>T1<span class="token punctuation">,</span> T2 any<span class="token punctuation">]</span><span class="token punctuation">(</span>dst <span class="token punctuation">[</span><span class="token punctuation">]</span>T1<span class="token punctuation">,</span> src <span class="token punctuation">[</span><span class="token punctuation">]</span>T2<span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> x <span class="token operator">:=</span> <span class="token keyword">range</span> src <span class="token punctuation">{</span>
		<span class="token keyword">if</span> i <span class="token operator">&gt;</span> <span class="token function">len</span><span class="token punctuation">(</span>dst<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> i
		<span class="token punctuation">}</span>
		dst<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">T1</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">// x \u662F T2\u7C7B\u578B \u4E0D\u80FD\u76F4\u63A5\u8F6C\u5316\u4E3A T1\u7C7B\u578B</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">len</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>T1,\u548CT2 \u867D\u7136\u90FD\u662Fany\u7684\u7EA6\u675F\uFF0C\u4F46\u662F\u554A\uFF0C\u5B83\u4E0D\u662F\u4E00\u4E2A\u7C7B\u578B\u554A\uFF01</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>Copy<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">,</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u4F60\u80FD\u8BF4\u53EF\u4EE5\u76F4\u63A5\u8F6C\u5316\u5417\uFF1F\uFF1F\uFF1F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8FD9\u79CD\u4EE3\u7801\u53EF\u4EE5\u66F4\u6539\u4E00\u4E0B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>dst<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>T1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u786E\u8BA4\u662F\u4E00\u79CD\u7C7B\u578B\u4EE5\u540E\u624D\u80FD\u8F6C\u5316</p><h2>\u53C2\u8003\u8D44\u6599</h2><ul><li>https://coolshell.cn/articles/21615.html</li><li>https://go.dev/doc/tutorial/generics</li><li>https://colobu.com/2021/08/30/how-is-go-generic-implemented/</li><li>https://go.googlesource.com/proposal/+/refs/heads/master/design/43651-type-parameters.md</li><li>https://quii.gitbook.io/learn-go-with-tests/go-fundamentals/generics</li></ul>`,95);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
